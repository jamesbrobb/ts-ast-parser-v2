[
  {
    "fileName": "chart-inputs.directive.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts",
    "imports": [
      {
        "name": "Directive",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Directive"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "ChartOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#chartoptions"
      },
      {
        "name": "DeepPartial",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#deeppartial"
      },
      {
        "name": "SeriesMarker",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/seriesmarker"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVChartInputsDirective",
        "typeParameters": [
          {
            "kind": "TypeParameter",
            "name": "HorzScaleItem",
            "signature": "HorzScaleItem"
          }
        ],
        "modifiers": {
          "decorators": [
            {
              "type": "Directive",
              "metadata": {
                "selector": "[tvChartInputs]",
                "standalone": true
              },
              "signature": "@Directive({selector: [tvChartInputs], standalone: true})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "id",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                "string"
              ],
              "arguments": [],
              "signature": "input<>()"
            },
            "access": "public",
            "signature": "id = input<>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "options",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "DeepPartial",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "ChartOptions",
                      "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#chartoptions",
                      "signature": "ChartOptions"
                    }
                  ],
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#deeppartial",
                  "signature": "DeepPartial<ChartOptions>"
                }
              ],
              "arguments": [],
              "signature": "input<DeepPartial<ChartOptions>>()"
            },
            "access": "public",
            "signature": "options = input<DeepPartial<ChartOptions>>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "markers",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "SeriesMarker",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "HorzScaleItem",
                        "signature": "HorzScaleItem"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/seriesmarker",
                    "signature": "SeriesMarker<HorzScaleItem>"
                  },
                  "signature": "SeriesMarker<HorzScaleItem>[]"
                }
              ],
              "arguments": [],
              "signature": "input<SeriesMarker<HorzScaleItem>[]>()"
            },
            "access": "public",
            "signature": "markers = input<SeriesMarker<HorzScaleItem>[]>()"
          }
        ]
      },
      {
        "kind": "VariableDeclaration",
        "name": "tvChartInputsDirectiveHostDef",
        "initializer": {
          "directive": "TVChartInputsDirective",
          "inputs": [
            "id",
            "options",
            "markers"
          ]
        }
      }
    ]
  },
  {
    "fileName": "charts-outputs.directive.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts",
    "imports": [
      {
        "name": "Directive",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Directive"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "SeriesType",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#seriestype"
      },
      {
        "name": "TVChart",
        "module": "../../core",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart"
      },
      {
        "name": "outputFromObservable",
        "module": "@angular/core/rxjs-interop",
        "resolvedModulePath": "@angular/core/rxjs-interop",
        "convertedModulePath": "https://angular.dev/api/core/rxjs-interop/outputFromObservable"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVChartOutputsDirective",
        "typeParameters": [
          {
            "kind": "TypeParameter",
            "name": "T",
            "constraint": {
              "kind": "TypeReference",
              "name": "SeriesType",
              "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#seriestype",
              "signature": "SeriesType"
            },
            "signature": "T extends SeriesType"
          },
          {
            "kind": "TypeParameter",
            "name": "HorzScaleItem",
            "signature": "HorzScaleItem"
          }
        ],
        "members": [
          {
            "kind": "PropertyDeclaration",
            "name": "#chart",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                {
                  "kind": "ExpressionWithTypeArguments",
                  "expression": "TVChart",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "T",
                      "signature": "T"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "signature": "TVChart<T, HorzScaleItem>"
                }
              ],
              "signature": "inject(TVChart<T, HorzScaleItem>)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "private",
            "signature": "readonly #chart = inject(TVChart<T, HorzScaleItem>)"
          }
        ],
        "modifiers": {
          "decorators": [
            {
              "type": "Directive",
              "metadata": {
                "selector": "[tvChartOutputs]",
                "standalone": true
              },
              "signature": "@Directive({selector: [tvChartOutputs], standalone: true})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "initialised",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "initialised$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.initialised$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.initialised$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly initialised = outputFromObservable(this.#chart.initialised$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "chartClick",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "click$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.click$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.click$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly chartClick = outputFromObservable(this.#chart.click$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "chartDBLClick",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "dblClick$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.dblClick$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.dblClick$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly chartDBLClick = outputFromObservable(this.#chart.dblClick$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "crosshairMoved",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "crossHairMove$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.crossHairMove$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.crossHairMove$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly crosshairMoved = outputFromObservable(this.#chart.crossHairMove$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "visibleTimeRangeChanged",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "visibleTimeRangeChange$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.visibleTimeRangeChange$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.visibleTimeRangeChange$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly visibleTimeRangeChanged = outputFromObservable(this.#chart.visibleTimeRangeChange$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "visibleLogicalRangeChanged",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "visibleLogicalRangeChange$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.visibleLogicalRangeChange$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.visibleLogicalRangeChange$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly visibleLogicalRangeChanged = outputFromObservable(this.#chart.visibleLogicalRangeChange$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "sizeChanged",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "sizeChange$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.sizeChange$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.sizeChange$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly sizeChanged = outputFromObservable(this.#chart.sizeChange$)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "dataChanged",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "outputFromObservable",
              "arguments": [
                {
                  "kind": "PropertyAccessExpression",
                  "name": "dataChange$",
                  "expression": {
                    "kind": "PropertyAccessExpression",
                    "name": "#chart",
                    "expression": "this",
                    "signature": "this.#chart"
                  },
                  "signature": "this.#chart.dataChange$"
                }
              ],
              "signature": "outputFromObservable(this.#chart.dataChange$)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly dataChanged = outputFromObservable(this.#chart.dataChange$)"
          }
        ]
      },
      {
        "kind": "VariableDeclaration",
        "name": "tvChartOutputsDirectiveHostDef",
        "initializer": {
          "directive": "TVChartOutputsDirective",
          "outputs": [
            "initialised",
            "chartClick",
            "chartDBLClick",
            "crosshairMoved",
            "visibleLogicalRangeChanged",
            "visibleTimeRangeChanged",
            "sizeChanged",
            "dataChanged"
          ]
        }
      }
    ]
  },
  {
    "fileName": "chart.directive.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts",
    "imports": [
      {
        "name": "deepmerge",
        "module": "deepmerge",
        "resolvedModulePath": "deepmerge"
      },
      {
        "name": "Directive",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Directive"
      },
      {
        "name": "ElementRef",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ElementRef"
      },
      {
        "name": "OnInit",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/OnInit"
      },
      {
        "name": "OnDestroy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/OnDestroy"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "effect",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/effect"
      },
      {
        "name": "ChartOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#chartoptions"
      },
      {
        "name": "ColorType",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/enums/colortype"
      },
      {
        "name": "DeepPartial",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#deeppartial"
      },
      {
        "name": "ICustomSeriesPaneView",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/icustomseriespaneview"
      },
      {
        "name": "LineStyle",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/enums/linestyle"
      },
      {
        "name": "SeriesDataItemTypeMap",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/seriesdataitemtypemap"
      },
      {
        "name": "SeriesPartialOptionsMap",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/seriespartialoptionsmap"
      },
      {
        "name": "SeriesType",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#seriestype"
      },
      {
        "name": "TVChart",
        "module": "../../core",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart"
      },
      {
        "name": "tvChartProviderWithExistenceCheck",
        "module": "../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "./chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "./chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "./charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "VariableDeclaration",
        "name": "DEFAULT_CHART_OPTIONS",
        "type": {
          "kind": "TypeReference",
          "name": "DeepPartial",
          "typeArguments": [
            {
              "kind": "TypeReference",
              "name": "ChartOptions",
              "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#chartoptions",
              "signature": "ChartOptions"
            }
          ],
          "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#deeppartial",
          "signature": "DeepPartial<ChartOptions>"
        },
        "initializer": {
          "height": "300",
          "autoSize": true,
          "timeScale": {
            "fixRightEdge": true,
            "lockVisibleTimeRangeOnResize": true,
            "timeVisible": true,
            "secondsVisible": "false"
          },
          "crosshair": {
            "vertLine": {
              "style": {
                "kind": "PropertyAccessExpression",
                "name": "LargeDashed",
                "expression": "LineStyle",
                "signature": "LineStyle.LargeDashed"
              }
            },
            "horzLine": {
              "style": {
                "kind": "PropertyAccessExpression",
                "name": "LargeDashed",
                "expression": "LineStyle",
                "signature": "LineStyle.LargeDashed"
              }
            }
          }
        }
      },
      {
        "kind": "VariableDeclaration",
        "name": "DEFAULT_DARK_CHART_OPTIONS",
        "type": {
          "kind": "TypeReference",
          "name": "DeepPartial",
          "typeArguments": [
            {
              "kind": "TypeReference",
              "name": "ChartOptions",
              "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#chartoptions",
              "signature": "ChartOptions"
            }
          ],
          "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#deeppartial",
          "signature": "DeepPartial<ChartOptions>"
        },
        "initializer": {
          "kind": "CallExpression",
          "expression": "deepmerge",
          "arguments": [
            "DEFAULT_CHART_OPTIONS",
            {
              "layout": {
                "background": {
                  "type": {
                    "kind": "PropertyAccessExpression",
                    "name": "Solid",
                    "expression": "ColorType",
                    "signature": "ColorType.Solid"
                  },
                  "color": "#222"
                },
                "textColor": "#DDD"
              },
              "grid": {
                "vertLines": {
                  "color": "#444"
                },
                "horzLines": {
                  "color": "#444"
                }
              },
              "timeScale": {
                "borderColor": "#555"
              },
              "leftPriceScale": {
                "borderColor": "#555"
              },
              "rightPriceScale": {
                "borderColor": "#555"
              },
              "crosshair": {
                "vertLine": {
                  "color": "#fff",
                  "labelBackgroundColor": "#aaa",
                  "style": {
                    "kind": "PropertyAccessExpression",
                    "name": "SparseDotted",
                    "expression": "LineStyle",
                    "signature": "LineStyle.SparseDotted"
                  }
                },
                "horzLine": {
                  "color": "#fff",
                  "labelBackgroundColor": "#aaa",
                  "style": {
                    "kind": "PropertyAccessExpression",
                    "name": "SparseDotted",
                    "expression": "LineStyle",
                    "signature": "LineStyle.SparseDotted"
                  }
                }
              }
            }
          ],
          "signature": "deepmerge(DEFAULT_CHART_OPTIONS, { layout: { background: { type: ColorType.Solid, color: #222 }, textColor: #DDD }, grid: { vertLines: { color: #444 }, horzLines: { color: #444 } }, timeScale: { borderColor: #555 }, leftPriceScale: { borderColor: #555 }, rightPriceScale: { borderColor: #555 }, crosshair: { vertLine: { color: #fff, labelBackgroundColor: #aaa, style: LineStyle.SparseDotted }, horzLine: { color: #fff, labelBackgroundColor: #aaa, style: LineStyle.SparseDotted } } })"
        }
      },
      {
        "kind": "ClassDeclaration",
        "name": "TVChartDirective",
        "typeParameters": [
          {
            "kind": "TypeParameter",
            "name": "T",
            "constraint": {
              "kind": "TypeReference",
              "name": "SeriesType",
              "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#seriestype",
              "signature": "SeriesType"
            },
            "signature": "T extends SeriesType"
          },
          {
            "kind": "TypeParameter",
            "name": "HorzScaleItem",
            "signature": "HorzScaleItem"
          }
        ],
        "members": [
          {
            "kind": "PropertyDeclaration",
            "name": "#inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "private",
            "signature": "readonly #inputs = inject(TVChartInputsDirective)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "#element",
            "initializedValue": {
              "kind": "PropertyAccessExpression",
              "name": "nativeElement",
              "expression": {
                "kind": "CallExpression",
                "expression": "inject",
                "arguments": [
                  {
                    "kind": "ExpressionWithTypeArguments",
                    "expression": "ElementRef",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "HTMLElement",
                        "signature": "HTMLElement"
                      }
                    ],
                    "signature": "ElementRef<HTMLElement>"
                  }
                ],
                "signature": "inject(ElementRef<HTMLElement>)"
              },
              "signature": "inject(ElementRef<HTMLElement>).nativeElement"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "private",
            "signature": "readonly #element = inject(ElementRef<HTMLElement>).nativeElement"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "#chart",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                {
                  "kind": "ExpressionWithTypeArguments",
                  "expression": "TVChart",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "T",
                      "signature": "T"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "signature": "TVChart<T, HorzScaleItem>"
                }
              ],
              "signature": "inject(TVChart<T, HorzScaleItem>)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "private",
            "signature": "readonly #chart = inject(TVChart<T, HorzScaleItem>)"
          },
          {
            "kind": "Constructor",
            "parameters": []
          }
        ],
        "heritageClauses": [
          {
            "kind": "HeritageClause",
            "token": "implements",
            "types": [
              {
                "kind": "ExpressionWithTypeArguments",
                "expression": "OnInit",
                "signature": "OnInit"
              },
              {
                "kind": "ExpressionWithTypeArguments",
                "expression": "OnDestroy",
                "signature": "OnDestroy"
              }
            ]
          }
        ],
        "modifiers": {
          "decorators": [
            {
              "type": "Directive",
              "metadata": {
                "selector": "[tvChart]",
                "standalone": true,
                "providers": [
                  "tvChartProviderWithExistenceCheck"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ]
              },
              "signature": "@Directive({selector: [tvChart], standalone: true, providers: tvChartProviderWithExistenceCheck, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "type",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": {
                "kind": "PropertyAccessExpression",
                "name": "required",
                "expression": "input",
                "signature": "input.required"
              },
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "T",
                  "signature": "T"
                }
              ],
              "arguments": [
                {
                  "alias": "tvChart"
                }
              ],
              "signature": "input.required<T>({ alias: tvChart })"
            },
            "access": "public",
            "signature": "type = input.required<T>({ alias: tvChart })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "IndexedAccessType",
                  "objectType": {
                    "kind": "TypeReference",
                    "name": "SeriesPartialOptionsMap",
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/seriespartialoptionsmap",
                    "signature": "SeriesPartialOptionsMap"
                  },
                  "indexType": {
                    "kind": "TypeReference",
                    "name": "T",
                    "signature": "T"
                  },
                  "signature": "SeriesPartialOptionsMap[T]"
                }
              ],
              "arguments": [],
              "signature": "input<SeriesPartialOptionsMap[T]>()"
            },
            "access": "public",
            "signature": "seriesOptions = input<SeriesPartialOptionsMap[T]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "IndexedAccessType",
                    "objectType": {
                      "kind": "TypeReference",
                      "name": "SeriesDataItemTypeMap",
                      "typeArguments": [
                        {
                          "kind": "TypeReference",
                          "name": "HorzScaleItem",
                          "signature": "HorzScaleItem"
                        }
                      ],
                      "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/seriesdataitemtypemap",
                      "signature": "SeriesDataItemTypeMap<HorzScaleItem>"
                    },
                    "indexType": {
                      "kind": "TypeReference",
                      "name": "T",
                      "signature": "T"
                    },
                    "signature": "SeriesDataItemTypeMap<HorzScaleItem>[T]"
                  },
                  "signature": "SeriesDataItemTypeMap<HorzScaleItem>[T][]"
                }
              ],
              "arguments": [],
              "signature": "input<SeriesDataItemTypeMap<HorzScaleItem>[T][]>()"
            },
            "access": "public",
            "signature": "data = input<SeriesDataItemTypeMap<HorzScaleItem>[T][]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "customSeriesView",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "ICustomSeriesPaneView",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/icustomseriespaneview",
                  "signature": "ICustomSeriesPaneView<HorzScaleItem>"
                }
              ],
              "arguments": [],
              "signature": "input<ICustomSeriesPaneView<HorzScaleItem>>()"
            },
            "access": "public",
            "signature": "customSeriesView = input<ICustomSeriesPaneView<HorzScaleItem>>()"
          }
        ],
        "methods": [
          {
            "kind": "MethodDeclaration",
            "name": "ngOnInit",
            "parameters": [],
            "access": "public",
            "returnType": "void",
            "signature": "ngOnInit(): void"
          },
          {
            "kind": "MethodDeclaration",
            "name": "ngOnDestroy",
            "parameters": [],
            "access": "public",
            "returnType": "void",
            "signature": "ngOnDestroy(): void"
          },
          {
            "kind": "MethodDeclaration",
            "name": "methodTest",
            "returnType": "void",
            "parameters": [
              {
                "kind": "Parameter",
                "name": "chart",
                "type": {
                  "kind": "TypeReference",
                  "name": "TVChart",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "T",
                      "signature": "T"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart",
                  "signature": "TVChart<T, HorzScaleItem>"
                },
                "signature": "chart: TVChart<T, HorzScaleItem>"
              },
              {
                "kind": "Parameter",
                "name": "value",
                "optional": true,
                "type": "string",
                "signature": "value?: string"
              }
            ],
            "access": "public",
            "signature": "methodTest(chart: TVChart<T, HorzScaleItem>, value?: string): void"
          },
          {
            "kind": "MethodDeclaration",
            "name": "methodTest2",
            "parameters": [
              {
                "kind": "Parameter",
                "name": "chart",
                "type": {
                  "kind": "TypeReference",
                  "name": "TVChart",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "T",
                      "signature": "T"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart",
                  "signature": "TVChart<T, HorzScaleItem>"
                },
                "signature": "chart: TVChart<T, HorzScaleItem>"
              },
              {
                "kind": "Parameter",
                "name": "value",
                "optional": true,
                "type": "string",
                "signature": "value?: string"
              }
            ],
            "access": "public",
            "returnType": "",
            "signature": "methodTest2(chart: TVChart<T, HorzScaleItem>, value?: string)"
          },
          {
            "kind": "MethodDeclaration",
            "name": "methodTest3",
            "returnType": {
              "kind": "TypeReference",
              "name": "TVChart",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "T",
                  "signature": "T"
                },
                {
                  "kind": "TypeReference",
                  "name": "HorzScaleItem",
                  "signature": "HorzScaleItem"
                }
              ],
              "resolvedPath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart",
              "signature": "TVChart<T, HorzScaleItem>"
            },
            "parameters": [
              {
                "kind": "Parameter",
                "name": "chart",
                "type": {
                  "kind": "TypeReference",
                  "name": "TVChart",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "T",
                      "signature": "T"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart",
                  "signature": "TVChart<T, HorzScaleItem>"
                },
                "signature": "chart: TVChart<T, HorzScaleItem>"
              },
              {
                "kind": "Parameter",
                "name": "value",
                "type": "string",
                "initializer": "a",
                "signature": "value: string = 'a'"
              }
            ],
            "access": "public",
            "signature": "methodTest3(chart: TVChart<T, HorzScaleItem>, value: string = 'a'): TVChart<T, HorzScaleItem>"
          }
        ]
      }
    ]
  },
  {
    "fileName": "custom-chart.component.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/custom-chart",
    "imports": [
      {
        "name": "ChangeDetectionStrategy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ChangeDetectionStrategy"
      },
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      },
      {
        "name": "CustomData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/customdata"
      },
      {
        "name": "CustomSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#customseriespartialoptions"
      },
      {
        "name": "ICustomSeriesPaneView",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/icustomseriespaneview"
      },
      {
        "name": "Time",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#time"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVChartCustomSeriesComponent",
        "typeParameters": [
          {
            "kind": "TypeParameter",
            "name": "HorzScaleItem",
            "default": {
              "kind": "TypeReference",
              "name": "Time",
              "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#time",
              "signature": "Time"
            },
            "signature": "HorzScaleItem = [object Object]"
          }
        ],
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-custom-series-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./custom-chart.component.html",
                "styleUrl": "./custom-chart.component.scss",
                "changeDetection": {
                  "kind": "PropertyAccessExpression",
                  "name": "OnPush",
                  "expression": "ChangeDetectionStrategy",
                  "signature": "ChangeDetectionStrategy.OnPush"
                }
              },
              "signature": "@Component({selector: tv-custom-series-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./custom-chart.component.html, styleUrl: ./custom-chart.component.scss, changeDetection: [object Object]})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "CustomSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#customseriespartialoptions",
                  "signature": "CustomSeriesPartialOptions"
                }
              ],
              "arguments": [
                {}
              ],
              "signature": "input<CustomSeriesPartialOptions>({  })"
            },
            "access": "public",
            "signature": "seriesOptions = input<CustomSeriesPartialOptions>({  })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "CustomData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "HorzScaleItem",
                        "signature": "HorzScaleItem"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/customdata",
                    "signature": "CustomData<HorzScaleItem>"
                  },
                  "signature": "CustomData<HorzScaleItem>[]"
                }
              ],
              "arguments": [],
              "signature": "input<CustomData<HorzScaleItem>[]>()"
            },
            "access": "public",
            "signature": "data = input<CustomData<HorzScaleItem>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "customSeriesView",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "ICustomSeriesPaneView",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/icustomseriespaneview",
                  "signature": "ICustomSeriesPaneView<HorzScaleItem>"
                }
              ],
              "arguments": [],
              "signature": "input<ICustomSeriesPaneView<HorzScaleItem>>()"
            },
            "access": "public",
            "signature": "customSeriesView = input<ICustomSeriesPaneView<HorzScaleItem>>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective)"
          }
        ]
      }
    ]
  },
  {
    "fileName": "candle-stick-chart.component.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/candle-stick-chart",
    "imports": [
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "effect",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/effect"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "viewChild",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/viewChild"
      },
      {
        "name": "CandlestickData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/candlestickdata"
      },
      {
        "name": "CandlestickSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#candlestickseriespartialoptions"
      },
      {
        "name": "HistogramData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/histogramdata"
      },
      {
        "name": "HistogramSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#histogramseriespartialoptions"
      },
      {
        "name": "ISeriesApi",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/iseriesapi"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "TVChart",
        "module": "../../../core",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVCandleStickChartComponent",
        "typeParameters": [
          {
            "kind": "TypeParameter",
            "name": "HorzScaleItem",
            "signature": "HorzScaleItem"
          }
        ],
        "members": [
          {
            "kind": "PropertyDeclaration",
            "name": "#histogramSeries",
            "type": {
              "kind": "TypeReference",
              "name": "ISeriesApi",
              "typeArguments": [
                {
                  "kind": "LiteralType",
                  "value": "Histogram",
                  "signature": "Histogram"
                },
                {
                  "kind": "TypeReference",
                  "name": "HorzScaleItem",
                  "signature": "HorzScaleItem"
                }
              ],
              "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/iseriesapi",
              "signature": "ISeriesApi<Histogram, HorzScaleItem>"
            },
            "optional": true,
            "access": "private",
            "signature": "#histogramSeries?: ISeriesApi<Histogram, HorzScaleItem>"
          },
          {
            "kind": "Constructor",
            "parameters": []
          },
          {
            "kind": "MethodDeclaration",
            "name": "#setVolume",
            "returnType": "void",
            "parameters": [
              {
                "kind": "Parameter",
                "name": "data",
                "type": {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "HistogramData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "HorzScaleItem",
                        "signature": "HorzScaleItem"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/histogramdata",
                    "signature": "HistogramData<HorzScaleItem>"
                  },
                  "signature": "HistogramData<HorzScaleItem>[]"
                },
                "signature": "data: [object Object]"
              }
            ],
            "access": "private",
            "signature": "#setVolume(data: [object Object]): void"
          },
          {
            "kind": "MethodDeclaration",
            "name": "#initialiseHistogram",
            "returnType": "void",
            "parameters": [],
            "access": "private",
            "signature": "#initialiseHistogram(): void"
          }
        ],
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-candlestick-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./candlestick-chart.component.html",
                "styleUrl": "./candlestick-chart.component.scss"
              },
              "signature": "@Component({selector: tv-candlestick-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./candlestick-chart.component.html, styleUrl: ./candlestick-chart.component.scss})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "CandlestickSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#candlestickseriespartialoptions",
                  "signature": "CandlestickSeriesPartialOptions"
                }
              ],
              "arguments": [
                {}
              ],
              "signature": "input<CandlestickSeriesPartialOptions>({  })"
            },
            "access": "public",
            "signature": "seriesOptions = input<CandlestickSeriesPartialOptions>({  })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "volumeOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "HistogramSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#histogramseriespartialoptions",
                  "signature": "HistogramSeriesPartialOptions"
                }
              ],
              "arguments": [
                "DEFAULT_HISTOGRAM_SERIES_OPTIONS"
              ],
              "signature": "input<HistogramSeriesPartialOptions>(DEFAULT_HISTOGRAM_SERIES_OPTIONS)"
            },
            "access": "public",
            "signature": "volumeOptions = input<HistogramSeriesPartialOptions>(DEFAULT_HISTOGRAM_SERIES_OPTIONS)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "CandlestickData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "HorzScaleItem",
                        "signature": "HorzScaleItem"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/candlestickdata",
                    "signature": "CandlestickData<HorzScaleItem>"
                  },
                  "signature": "CandlestickData<HorzScaleItem>[]"
                }
              ],
              "arguments": [],
              "signature": "input<CandlestickData<HorzScaleItem>[]>()"
            },
            "access": "public",
            "signature": "data = input<CandlestickData<HorzScaleItem>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "volume",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "HistogramData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "HorzScaleItem",
                        "signature": "HorzScaleItem"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/histogramdata",
                    "signature": "HistogramData<HorzScaleItem>"
                  },
                  "signature": "HistogramData<HorzScaleItem>[]"
                }
              ],
              "arguments": [],
              "signature": "input<HistogramData<HorzScaleItem>[]>()"
            },
            "access": "public",
            "signature": "volume = input<HistogramData<HorzScaleItem>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "chart",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "viewChild",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "TVChartDirective",
                  "typeArguments": [
                    {
                      "kind": "LiteralType",
                      "value": "Candlestick",
                      "signature": "Candlestick"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive",
                  "signature": "TVChartDirective<Candlestick, HorzScaleItem>"
                },
                {
                  "kind": "TypeReference",
                  "name": "TVChart",
                  "typeArguments": [
                    {
                      "kind": "LiteralType",
                      "value": "Candlestick",
                      "signature": "Candlestick"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "resolvedPath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/core/tv-chart/tv-chart",
                  "signature": "TVChart<Candlestick, HorzScaleItem>"
                }
              ],
              "arguments": [
                {
                  "kind": "ExpressionWithTypeArguments",
                  "expression": "TVChartDirective",
                  "typeArguments": [
                    {
                      "kind": "LiteralType",
                      "value": "Candlestick",
                      "signature": "Candlestick"
                    },
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "signature": "TVChartDirective<Candlestick, HorzScaleItem>"
                },
                {
                  "read": "TVChart"
                }
              ],
              "signature": "viewChild<TVChartDirective<Candlestick, HorzScaleItem>, TVChart<Candlestick, HorzScaleItem>>(TVChartDirective<Candlestick, HorzScaleItem>, { read: TVChart })"
            },
            "access": "public",
            "signature": "chart = viewChild<TVChartDirective<Candlestick, HorzScaleItem>, TVChart<Candlestick, HorzScaleItem>>(TVChartDirective<Candlestick, HorzScaleItem>, { read: TVChart })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                {
                  "kind": "ExpressionWithTypeArguments",
                  "expression": "TVChartInputsDirective",
                  "typeArguments": [
                    {
                      "kind": "TypeReference",
                      "name": "HorzScaleItem",
                      "signature": "HorzScaleItem"
                    }
                  ],
                  "signature": "TVChartInputsDirective<HorzScaleItem>"
                }
              ],
              "signature": "inject(TVChartInputsDirective<HorzScaleItem>)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective<HorzScaleItem>)"
          }
        ]
      }
    ]
  },
  {
    "fileName": "histogram-chart.component.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/histogram-chart",
    "imports": [
      {
        "name": "ChangeDetectionStrategy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ChangeDetectionStrategy"
      },
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "HistogramData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/histogramdata"
      },
      {
        "name": "HistogramSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#histogramseriespartialoptions"
      },
      {
        "name": "Time",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#time"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVHistogramChartComponent",
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-histogram-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./histogram-chart.component.html",
                "styleUrl": "./histogram-chart.component.scss",
                "changeDetection": {
                  "kind": "PropertyAccessExpression",
                  "name": "OnPush",
                  "expression": "ChangeDetectionStrategy",
                  "signature": "ChangeDetectionStrategy.OnPush"
                }
              },
              "signature": "@Component({selector: tv-histogram-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./histogram-chart.component.html, styleUrl: ./histogram-chart.component.scss, changeDetection: [object Object]})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "HistogramSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#histogramseriespartialoptions",
                  "signature": "HistogramSeriesPartialOptions"
                }
              ],
              "arguments": [
                "DEFAULT_HISTOGRAM_SERIES_OPTIONS"
              ],
              "signature": "input<HistogramSeriesPartialOptions>(DEFAULT_HISTOGRAM_SERIES_OPTIONS)"
            },
            "access": "public",
            "signature": "seriesOptions = input<HistogramSeriesPartialOptions>(DEFAULT_HISTOGRAM_SERIES_OPTIONS)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "HistogramData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "Time",
                        "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#time",
                        "signature": "Time"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/histogramdata",
                    "signature": "HistogramData<Time>"
                  },
                  "signature": "HistogramData<Time>[]"
                }
              ],
              "arguments": [],
              "signature": "input<HistogramData<Time>[]>()"
            },
            "access": "public",
            "signature": "data = input<HistogramData<Time>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective)"
          }
        ]
      }
    ]
  },
  {
    "fileName": "line-chart.component.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/line-chart",
    "imports": [
      {
        "name": "ChangeDetectionStrategy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ChangeDetectionStrategy"
      },
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "LineData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/linedata"
      },
      {
        "name": "LineSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#lineseriespartialoptions"
      },
      {
        "name": "Time",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#time"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVLineChartDirective",
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-line-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./line-chart.component.html",
                "styleUrl": "./line-chart.component.scss",
                "changeDetection": {
                  "kind": "PropertyAccessExpression",
                  "name": "OnPush",
                  "expression": "ChangeDetectionStrategy",
                  "signature": "ChangeDetectionStrategy.OnPush"
                }
              },
              "signature": "@Component({selector: tv-line-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./line-chart.component.html, styleUrl: ./line-chart.component.scss, changeDetection: [object Object]})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "LineSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#lineseriespartialoptions",
                  "signature": "LineSeriesPartialOptions"
                }
              ],
              "arguments": [
                {}
              ],
              "signature": "input<LineSeriesPartialOptions>({  })"
            },
            "access": "public",
            "signature": "seriesOptions = input<LineSeriesPartialOptions>({  })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "LineData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "Time",
                        "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#time",
                        "signature": "Time"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/linedata",
                    "signature": "LineData<Time>"
                  },
                  "signature": "LineData<Time>[]"
                }
              ],
              "arguments": [],
              "signature": "input<LineData<Time>[]>()"
            },
            "access": "public",
            "signature": "data = input<LineData<Time>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective)"
          }
        ]
      }
    ]
  },
  {
    "fileName": "bar-chart.directive.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/bar-chart",
    "imports": [
      {
        "name": "ChangeDetectionStrategy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ChangeDetectionStrategy"
      },
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "BarData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/bardata"
      },
      {
        "name": "BarSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#barseriespartialoptions"
      },
      {
        "name": "Time",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#time"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVBarChartDirective",
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-bar-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./bar-chart.component.html",
                "styleUrl": "./bar-chart.component.scss",
                "changeDetection": {
                  "kind": "PropertyAccessExpression",
                  "name": "OnPush",
                  "expression": "ChangeDetectionStrategy",
                  "signature": "ChangeDetectionStrategy.OnPush"
                }
              },
              "signature": "@Component({selector: tv-bar-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./bar-chart.component.html, styleUrl: ./bar-chart.component.scss, changeDetection: [object Object]})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "BarSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#barseriespartialoptions",
                  "signature": "BarSeriesPartialOptions"
                }
              ],
              "arguments": [
                "DEFAULT_BAR_SERIES_OPTIONS"
              ],
              "signature": "input<BarSeriesPartialOptions>(DEFAULT_BAR_SERIES_OPTIONS)"
            },
            "access": "public",
            "signature": "seriesOptions = input<BarSeriesPartialOptions>(DEFAULT_BAR_SERIES_OPTIONS)"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "BarData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "Time",
                        "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#time",
                        "signature": "Time"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/bardata",
                    "signature": "BarData<Time>"
                  },
                  "signature": "BarData<Time>[]"
                }
              ],
              "arguments": [],
              "signature": "input<BarData<Time>[]>()"
            },
            "access": "public",
            "signature": "data = input<BarData<Time>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective)"
          }
        ]
      }
    ]
  },
  {
    "fileName": "baseline-chart.component.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/baseline-chart",
    "imports": [
      {
        "name": "ChangeDetectionStrategy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ChangeDetectionStrategy"
      },
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "BaselineData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/baselinedata"
      },
      {
        "name": "BaselineSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#baselineseriespartialoptions"
      },
      {
        "name": "Time",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#time"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVBaselineChartComponent",
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-baseline-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./baseline-chart.component.html",
                "styleUrl": "./baseline-chart.component.scss",
                "changeDetection": {
                  "kind": "PropertyAccessExpression",
                  "name": "OnPush",
                  "expression": "ChangeDetectionStrategy",
                  "signature": "ChangeDetectionStrategy.OnPush"
                }
              },
              "signature": "@Component({selector: tv-baseline-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./baseline-chart.component.html, styleUrl: ./baseline-chart.component.scss, changeDetection: [object Object]})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "BaselineSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#baselineseriespartialoptions",
                  "signature": "BaselineSeriesPartialOptions"
                }
              ],
              "arguments": [
                {}
              ],
              "signature": "input<BaselineSeriesPartialOptions>({  })"
            },
            "access": "public",
            "signature": "seriesOptions = input<BaselineSeriesPartialOptions>({  })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "BaselineData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "Time",
                        "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#time",
                        "signature": "Time"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/baselinedata",
                    "signature": "BaselineData<Time>"
                  },
                  "signature": "BaselineData<Time>[]"
                }
              ],
              "arguments": [],
              "signature": "input<BaselineData<Time>[]>()"
            },
            "access": "public",
            "signature": "data = input<BaselineData<Time>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective)"
          }
        ]
      }
    ]
  },
  {
    "fileName": "area-chart.component.ts",
    "path": "/Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/area-chart",
    "imports": [
      {
        "name": "ChangeDetectionStrategy",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/ChangeDetectionStrategy"
      },
      {
        "name": "Component",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/Component"
      },
      {
        "name": "inject",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/inject"
      },
      {
        "name": "input",
        "module": "@angular/core",
        "resolvedModulePath": "@angular/core",
        "convertedModulePath": "https://angular.dev/api/core/input"
      },
      {
        "name": "AreaData",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/areadata"
      },
      {
        "name": "AreaSeriesPartialOptions",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#areaseriespartialoptions"
      },
      {
        "name": "Time",
        "module": "lightweight-charts",
        "resolvedModulePath": "lightweight-charts",
        "convertedModulePath": "https://tradingview.github.io/lightweight-charts/docs/api#time"
      },
      {
        "name": "TVChartDirective",
        "module": "../chart.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart.directive"
      },
      {
        "name": "tvChartProvider",
        "module": "../../providers/tv-chart.provider",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/providers/tv-chart.provider"
      },
      {
        "name": "TVChartInputsDirective",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartInputsDirectiveHostDef",
        "module": "../chart-inputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/chart-inputs.directive"
      },
      {
        "name": "tvChartOutputsDirectiveHostDef",
        "module": "../charts-outputs.directive",
        "resolvedModulePath": "Users/James/WebstormProjects/ngx-lightweight-charts/library/src/lib/ng/charts/charts-outputs.directive"
      }
    ],
    "exports": [
      {
        "kind": "ClassDeclaration",
        "name": "TVAreaChartComponent",
        "modifiers": {
          "decorators": [
            {
              "type": "Component",
              "metadata": {
                "selector": "tv-area-chart",
                "standalone": true,
                "imports": [
                  "TVChartDirective"
                ],
                "providers": [
                  "tvChartProvider"
                ],
                "hostDirectives": [
                  "tvChartInputsDirectiveHostDef",
                  "tvChartOutputsDirectiveHostDef"
                ],
                "templateUrl": "./area-chart.component.html",
                "styleUrl": "./area-chart.component.scss",
                "changeDetection": {
                  "kind": "PropertyAccessExpression",
                  "name": "OnPush",
                  "expression": "ChangeDetectionStrategy",
                  "signature": "ChangeDetectionStrategy.OnPush"
                }
              },
              "signature": "@Component({selector: tv-area-chart, standalone: true, imports: TVChartDirective, providers: tvChartProvider, hostDirectives: tvChartInputsDirectiveHostDef,tvChartOutputsDirectiveHostDef, templateUrl: ./area-chart.component.html, styleUrl: ./area-chart.component.scss, changeDetection: [object Object]})"
            }
          ],
          "keywords": [
            "export"
          ]
        },
        "properties": [
          {
            "kind": "PropertyDeclaration",
            "name": "seriesOptions",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "TypeReference",
                  "name": "AreaSeriesPartialOptions",
                  "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#areaseriespartialoptions",
                  "signature": "AreaSeriesPartialOptions"
                }
              ],
              "arguments": [
                {}
              ],
              "signature": "input<AreaSeriesPartialOptions>({  })"
            },
            "access": "public",
            "signature": "seriesOptions = input<AreaSeriesPartialOptions>({  })"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "data",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "input",
              "typeArguments": [
                {
                  "kind": "ArrayType",
                  "elementType": {
                    "kind": "TypeReference",
                    "name": "AreaData",
                    "typeArguments": [
                      {
                        "kind": "TypeReference",
                        "name": "Time",
                        "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api#time",
                        "signature": "Time"
                      }
                    ],
                    "resolvedPath": "https://tradingview.github.io/lightweight-charts/docs/api/interfaces/areadata",
                    "signature": "AreaData<Time>"
                  },
                  "signature": "AreaData<Time>[]"
                }
              ],
              "arguments": [],
              "signature": "input<AreaData<Time>[]>()"
            },
            "access": "public",
            "signature": "data = input<AreaData<Time>[]>()"
          },
          {
            "kind": "PropertyDeclaration",
            "name": "inputs",
            "initializedValue": {
              "kind": "CallExpression",
              "expression": "inject",
              "arguments": [
                "TVChartInputsDirective"
              ],
              "signature": "inject(TVChartInputsDirective)"
            },
            "modifiers": {
              "keywords": [
                "readonly"
              ]
            },
            "access": "public",
            "signature": "readonly inputs = inject(TVChartInputsDirective)"
          }
        ]
      }
    ]
  }
]