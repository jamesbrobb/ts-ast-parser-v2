import * as ts from "typescript";
import { enumMemberDefinition, variableDeclarationDefinition, importDeclarationDefinition, importClauseDefinition, namespaceImportDefinition, namedImportsDefinition, importSpecifierDefinition, interfaceDeclarationDefinition, typeParameterDeclarationDefinition, typeReferenceDefinition, expressionWithTypeArgumentsDefinition, typeLiteralDefinition, heritageClauseDefinition, constructorDeclarationDefinition, propertyDeclarationDefinition, propertySignatureDefinition, methodDeclarationDefinition, getAccessorDeclarationDefinition, setAccessorDeclarationDefinition, parameterDeclarationDefinition, callExpressionDefinition, functionDeclarationDefinition, classDeclarationDefinition, typeAliasDeclarationDefinition, enumDeclarationDefinition, tupleTypeNodeDefinition, namedTupleMemberDefinition, parseArrayLiteral, parseString, parseBoolean, parseObjectLiteral, getDecorator } from "./definitions";
export const defaultDeclarationDefinitionMap = {
    [ts.SyntaxKind.ImportDeclaration]: importDeclarationDefinition,
    [ts.SyntaxKind.ImportClause]: importClauseDefinition,
    [ts.SyntaxKind.NamespaceImport]: namespaceImportDefinition,
    [ts.SyntaxKind.NamedImports]: namedImportsDefinition,
    [ts.SyntaxKind.ImportSpecifier]: importSpecifierDefinition,
    [ts.SyntaxKind.ClassDeclaration]: classDeclarationDefinition,
    [ts.SyntaxKind.InterfaceDeclaration]: interfaceDeclarationDefinition,
    [ts.SyntaxKind.Decorator]: getDecorator,
    [ts.SyntaxKind.TypeParameter]: typeParameterDeclarationDefinition,
    [ts.SyntaxKind.TypeReference]: typeReferenceDefinition,
    [ts.SyntaxKind.ExpressionWithTypeArguments]: expressionWithTypeArgumentsDefinition,
    [ts.SyntaxKind.TypeAliasDeclaration]: typeAliasDeclarationDefinition,
    [ts.SyntaxKind.TypeLiteral]: typeLiteralDefinition,
    [ts.SyntaxKind.HeritageClause]: heritageClauseDefinition,
    [ts.SyntaxKind.Constructor]: constructorDeclarationDefinition,
    [ts.SyntaxKind.PropertyDeclaration]: propertyDeclarationDefinition,
    [ts.SyntaxKind.PropertySignature]: propertySignatureDefinition,
    [ts.SyntaxKind.MethodDeclaration]: methodDeclarationDefinition,
    [ts.SyntaxKind.GetAccessor]: getAccessorDeclarationDefinition,
    [ts.SyntaxKind.SetAccessor]: setAccessorDeclarationDefinition,
    [ts.SyntaxKind.EnumDeclaration]: enumDeclarationDefinition,
    [ts.SyntaxKind.EnumMember]: enumMemberDefinition,
    [ts.SyntaxKind.VariableDeclaration]: variableDeclarationDefinition,
    [ts.SyntaxKind.Parameter]: parameterDeclarationDefinition,
    [ts.SyntaxKind.CallExpression]: callExpressionDefinition,
    [ts.SyntaxKind.FunctionDeclaration]: functionDeclarationDefinition,
    [ts.SyntaxKind.TupleType]: tupleTypeNodeDefinition,
    [ts.SyntaxKind.NamedTupleMember]: namedTupleMemberDefinition,
    [ts.SyntaxKind.Identifier]: parseString,
    [ts.SyntaxKind.StringLiteral]: parseString,
    [ts.SyntaxKind.TrueKeyword]: parseBoolean,
    [ts.SyntaxKind.FalseKeyword]: parseBoolean,
    [ts.SyntaxKind.ObjectLiteralExpression]: parseObjectLiteral,
    [ts.SyntaxKind.ArrayLiteralExpression]: parseArrayLiteral
};
//# sourceMappingURL=declaration-definition.map.js.map